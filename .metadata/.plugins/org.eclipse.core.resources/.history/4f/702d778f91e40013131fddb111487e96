/**
 * Project: SampleGame01
 * Package: game.engine
 * Author: EltonJohn
 * Date: May 23, 2014
 * Time: 6:36:52 PM
 */
package game.engine;

import static org.lwjgl.opengl.GL11.*; //Use GL11
import static minecraft2d.World.BLOCKS_HEIGHT;
import static minecraft2d.World.BLOCKS_WIDTH;
import static minecraft2d.World.BLOCK_SIZE;
import static minecraft2d.World.saveFile;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

import javax.swing.JOptionPane;

import minecraft2d.Block;
import minecraft2d.BlockGrid;
import minecraft2d.BlockType;
import minecraft2d.World;

import org.lwjgl.LWJGLException;
import org.lwjgl.input.Keyboard;
import org.lwjgl.input.Mouse;
import org.lwjgl.opengl.Display;
import org.lwjgl.opengl.DisplayMode;
import org.newdawn.slick.opengl.Texture;
import org.newdawn.slick.opengl.TextureLoader;

public class Main {
	public static BlockGrid grid;
	public static BlockType selection;
	public static int SCREEN_WIDTH =640,SCREEN_HEIGHT =480;
	public static Texture background ;
	public static String backgroundPath = "res/images/background.png";
	private static boolean done = false;
	public static int selection_x=0,selection_y=0;
	
	public static void createDisplay() {
		try {
			Display.setTitle("Minecraft2D");
			Display.setDisplayMode(new DisplayMode(SCREEN_WIDTH,SCREEN_HEIGHT));
			Display.create();
		} catch (LWJGLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		
		
		
		
		glMatrixMode(GL_PROJECTION);
		glLoadIdentity();
		glOrtho(0, SCREEN_WIDTH, SCREEN_HEIGHT, 0, 1, -1);
		glMatrixMode(GL_MODELVIEW);
		glEnable(GL_TEXTURE_2D);
		glEnable(GL_BLEND);
		
		glClearColor(0.0f, 0.0f, 0.0f, 0.0f);  
			glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
			glViewport(0,0,SCREEN_WIDTH,SCREEN_HEIGHT);
		glMatrixMode(GL_MODELVIEW);
		
		setUpBackground();
		grid = new BlockGrid();
		selection = BlockType.STONE;
	}

	private static void setUpBackground() {
		Texture result = null;
		try {
			result = TextureLoader.getTexture("PNG", new FileInputStream(
					new File(backgroundPath)));
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		background = result;
	}
	
	public static void drawSelectionBox(){
		if(grid.getAt(selection_x, selection_y).getType() != BlockType.AIR){
			int x = selection_x * BLOCK_SIZE;
			int y = selection_y * BLOCK_SIZE;
			glBindTexture(GL_TEXTURE_2D, 0);
			glColor4f(1f,1f,1f,0.5f);
			glLoadIdentity();
			glTranslatef(x, y, 0);
			glBegin(GL_QUADS);
				glVertex2f(0,0);
				glVertex2f(BLOCK_SIZE,0);
				glVertex2f(BLOCK_SIZE, BLOCK_SIZE);
				glVertex2f(0, BLOCK_SIZE);
			glEnd();
			glLoadIdentity();
			glColor4f(1f,1f,1f,1f);
		}
	}
	
	public static void gameLoop() { 
		while(!(done||Display.isCloseRequested()))	{
			//Drawing code
			glClear(GL_COLOR_BUFFER_BIT);
			
			
			//get user input
			input();
			drawBackground();
			grid.draw();
			drawSelectionBox();
			Display.update();
			Display.sync(60);
		}
	}
	private static void drawBackground() {
		background.bind();
		glLoadIdentity();
		glTranslatef(0, 0, 0);
		glBegin(GL_QUADS);
			glTexCoord2f(0,0);
			glVertex2f(0,0);
			glTexCoord2f(1,0);
			glVertex2f(SCREEN_WIDTH,0);
			glTexCoord2f(1, 1);
			glVertex2f(SCREEN_WIDTH, SCREEN_HEIGHT);
			glTexCoord2f(0, 1);
			glVertex2f(0, SCREEN_HEIGHT);
		glEnd();
		glLoadIdentity();
	}

	public static void input(){
		int mousex = Mouse.getX();
		int mousey = SCREEN_HEIGHT - Mouse.getY();
		boolean mouseClicked =  Mouse.isButtonDown(0);
		if(mouseClicked){
			int grid_x = Math.round(mousex/BLOCK_SIZE);
			int grid_y = Math.round(mousey/BLOCK_SIZE);
			grid.setAt(grid_x, grid_y, selection);
		}
		while(Keyboard.next()){
			if(Keyboard.getEventKey() == Keyboard.KEY_S){
				grid.save(new File(saveFile));//TODO move this somewhere else
			}
			if(Keyboard.getEventKey() == Keyboard.KEY_L){
				grid.load(new File(saveFile));//TODO move this somewhere else
				JOptionPane.showMessageDialog(null, "Done loading");
			}
			if(Keyboard.getEventKey() == Keyboard.KEY_1){
				selection= BlockType.STONE;
			}
			if(Keyboard.getEventKey() == Keyboard.KEY_2){
				selection= BlockType.DIRT;
			}
			if(Keyboard.getEventKey() == Keyboard.KEY_3){
				selection= BlockType.GRASS;
			}
			if(Keyboard.getEventKey() == Keyboard.KEY_4){
				selection= BlockType.AIR;
			}
			if(Keyboard.getEventKey() == Keyboard.KEY_C){
				grid.clear();
			}
			if(Keyboard.getEventKey() == Keyboard.KEY_ESCAPE){
				done = true;
			}
		}
	}

	public static void quit() {
		Display.destroy();
	}
	
	public static void main(String[] args) {
		createDisplay();
		gameLoop();
		quit();
	}
	
}